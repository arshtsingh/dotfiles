set global tabstop 2
set global indentwidth 2

set-option global autoreload true
set-option global scrolloff 3,0
set-option -add global ui_options ncurses_enable_mouse=false
set-option -add global ui_options ncurses_assistant=none
set-option -add global ui_options ncurses_status_on_top=yes

addhl global/ wrap -word -marker "â†³ "
addhl global/ruler column 88 default,rgb:303030
addhl global/trailing-whitespace regex '\h+$' 0:default,red
addhl global/todo regex \b(TODO|FIXME|XXX|NOTE)\b 0:default+rb
addhl global/ number-lines -hlcursor
addhl global/show-matching show-matching

# tab/backtab to cycle through completions
hook global InsertCompletionShow .* %{
  map window insert <s-tab> <c-p>
  map window insert <tab> <c-n>
}
hook global InsertCompletionHide .* %{
  unmap window insert <tab> <c-n>
  unmap window insert <s-tab> <c-p>
}
hook global NormalKey y|d|c %{ nop %sh{
  printf %s "$kak_main_reg_dquote" | pbcopy
}}
hook global InsertChar \t %{
  exec -draft h@
}

map global insert <tab> '<a-;><a-gt>'
map global insert <s-tab> '<a-;><lt>'

map global normal <c-s> ': write<ret>'
map global normal x ':extend-line-down %val{count}<ret>'
map global normal X ':extend-line-up %val{count}<ret>'
map global normal ^ ': upper<ret>'
map global normal _ ': lower<ret>'

map -docstring "paste" global user p '!pbpaste --output --clipboard<ret>'
map -docstring "trim whitespaces" global user w ':trim-whitespaces<ret>'

define-command where 'echo %val{buffile}'

def -params 1 extend-line-down %{
    exec "<a-:>%arg{1}X"
}

def -params 1 extend-line-up %{
    exec "<a-:><a-;>%arg{1}K<a-;>"
      try %{
            exec -draft ';<a-K>\n<ret>'
                exec X
      }
        exec '<a-;><a-X>'
}

def trim-whitespaces -docstring "Remove trailing whitespace from every line" %{
    try %{
          exec -draft '%<a-s>ghgl<a-i><space>d'
              echo -markup "{Information}trimmed"
    } catch %{
          echo -markup "{Information}nothing to trim"
    }
}


